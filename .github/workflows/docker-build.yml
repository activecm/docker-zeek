name: Publish Docker Images

on:
  push:
    branches: [ master ]
    paths:
      # Paths that trigger a docker image build
      - '.github/workflows/docker-build.yml'
      - 'etc/**'
      - 'share/**'
      - 'docker-entrypoint.sh'
      - 'Dockerfile'
env:
  REGISTRY_IMAGE: activecm/zeek

jobs:
  build:
    runs-on: "${{ matrix.runner }}"
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          # - linux/arm/v7
          - linux/arm64
        version: 
          - "6.2.1"
        include:
          - platform: linux/amd64
            arch: amd64
            runner: ubuntu-large-1
          - platform: linux/arm64
            arch: arm64
            runner: ubuntu-arm-l
          # - platform: linux/arm/v7
          #   arch: armv7
          #   runner: 3
          - version: "6.2.1"
            zkg: "3.0.1"
            release-tag: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.version }}
            type=raw,value=latest,enable=${{ matrix.release-tag == 'latest' }}
          
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            ZEEK_VERSION=${{ matrix.version }}
            ZKG_VERSION=${{ matrix.zkg }}
          push: true
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache-${{ matrix.version }}-${{ matrix.arch }}
          cache-to: type=registry,ref=${{ env.REGISTRY_IMAGE }}:buildcache-${{ matrix.version }}-${{ matrix.arch }},mode=max

      
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.version }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: 
      group: "ubuntu-runners-l"
    needs:
      - build
    strategy:
      matrix:
        include:
        - version: "6.2.1"
          release-tag: latest
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.version }}-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}},value=${{ matrix.version }}
            type=raw,value=latest,enable=${{ matrix.release-tag == 'latest' }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}